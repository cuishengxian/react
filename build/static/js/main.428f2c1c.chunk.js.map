{"version":3,"sources":["pages/List.js","pages/Input.js","pages/Todolist.js","pages/context.js","pages/Demo02.js","pages/Demo01.js","index.js"],"names":["List","done","this","props","id","renderTodos","Component","Input","handleChange","e","addTodo","inpValue","htmlFor","ref","inp","input","value","type","onChange","onClick","Todolist","setState","target","state","todos","title","delTodo","idx","filter","item","index","toggle","newTodos","JSON","parse","stringify","map","todo","checked","dangerouslySetInnerHTML","__html","localStorage","getItem","setItem","arr1","arr2","length","Context","React","createContext","Demo02","Consumer","data","key","changeData","Demo01","style","width","height","defaultProps","name","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.428f2c1c.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nexport default class List extends Component {\r\n  render() {\r\n    const done = this.props.done\r\n      return (\r\n        <div id=\"div2\">\r\n          <ul id=\"doing\"> \r\n            {this.props.renderTodos(done)}\r\n          </ul>\r\n        </div>\r\n        \r\n      )\r\n  }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Input extends Component {\r\n    \r\n    handleChange = (e)=>{\r\n        this.props.handleChange(e);\r\n    }\r\n   \r\n    addTodo = ()=>{\r\n        this.props.addTodo();\r\n    }\r\n\r\n    render() {\r\n        \r\n        let inpValue = this.props.inpValue;\r\n        \r\n        return (\r\n            <div>\r\n                <label htmlFor=\"inp\">todolist</label>\r\n                \r\n                <input id = \"inp\" \r\n                ref={inp=>this.input = inp} \r\n                value={inpValue} \r\n                type=\"text\" \r\n                onChange = {this.handleChange} />\r\n\r\n                <button onClick={this.addTodo}>添加</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport List from './List';\r\nimport Input from'./Input';\r\n\r\n// 组件名首字母一定要大写\r\nclass Todolist extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            inpValue: '',\r\n            todos:[]\r\n        }\r\n    }\r\n\r\n    handleChange = (e)=>{\r\n        this.setState({inpValue:e.target.value})\r\n    }\r\n    componentDidMount(){\r\n        // this.input.focus();\r\n        let todos = localStorage.getItem('todos');\r\n        if(todos){\r\n            this.setState({\r\n                todos: JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n    }\r\n    addTodo = ()=>{\r\n        if(this.state.inpValue==''){\r\n            return;\r\n        }\r\n        this.setState({\r\n            todos: [\r\n                {\r\n                    title: this.state.inpValue,\r\n                    done: false\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n        })\r\n        this.setState({inpValue:''})\r\n\r\n    }\r\n    delTodo = (idx)=>{\r\n        // let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        // newTodos.splice(idx,1);\r\n        // this.setState({todos:newTodos});\r\n        this.setState({\r\n            todos: this.state.todos.filter((item,index)=>index!=idx)\r\n        });\r\n        // setState 是异步执行的，注意callback的用法\r\n        // this.setState({\r\n        //     todos: this.state.todos.filter((item,index)=>index!=idx)\r\n        // },()=>{\r\n        //     localStorage.setItem(\r\n        //         'todos',\r\n        //         JSON.stringify(this.state.todos)\r\n        //     )\r\n        // });\r\n    }\r\n    toggle = (index)=>{\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos: newTodos\r\n        })\r\n    }\r\n    renderTodos = (done)=>{\r\n        return this.state.todos.map((todo,idx)=>{\r\n            if(done==todo.done){\r\n                return <li>\r\n                    <input \r\n                        onClick={()=>this.toggle(idx)}\r\n                        checked={done} \r\n                        type=\"checkbox\"\r\n                    />\r\n                    <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                    <button \r\n                        onClick={()=>this.delTodo(idx)}\r\n                    >\r\n                        删除\r\n                    </button>\r\n                </li>\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        \r\n        const {todos,inpValue} = this.state;\r\n        let arr1 = todos.filter( item => item.done)\r\n        let arr2 = todos.filter( item => !item.done)\r\n        // console.log(arr1);\r\n        return (\r\n            <div>\r\n                 <Input\r\n                    addTodo={this.addTodo} \r\n                    inpValue = {inpValue}\r\n                    handleChange = {this.handleChange}\r\n                /> \r\n                \r\n                <h2>正在进行{arr2.length}</h2>\r\n                <List renderTodos={this.renderTodos} done={false}/>\r\n                <h2>已经完成{arr1.length}</h2>\r\n                <List renderTodos={this.renderTodos} done={true}/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Todolist\r\n","import React from 'react';\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context;","import React from 'react'\r\nimport Context from './context'\r\n\r\nconst Demo02 = () => {\r\n    return (\r\n        <div>\r\n            <h2>Demo02</h2>\r\n            <Context.Consumer>\r\n                {\r\n                    ({data})=>data.map(item=><li key={item}>{item}</li>)\r\n                }\r\n            </Context.Consumer>\r\n            <Context.Consumer>\r\n                {\r\n                    ({changeData})=><button onClick={()=>changeData(123)}>点击</button>\r\n                }\r\n            </Context.Consumer>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Demo02","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Context from './context'\r\nimport Demo02 from './Demo02'\r\n\r\nconst Demo01 = (props) => {\r\n    return (\r\n        <div style={{\r\n            width:100,\r\n            height:100,\r\n        }}>\r\n            <h2>Demo01</h2>\r\n            <ul>\r\n                <Context.Consumer>\r\n                    {\r\n                        ({data})=>data.map(\r\n                            item=><li key={item}>{item}</li>\r\n                        )\r\n                    }\r\n                </Context.Consumer>\r\n            </ul>\r\n            <Demo02 />\r\n        </div>\r\n    )\r\n}\r\n\r\nDemo01.propTypes = {\r\n    name: PropTypes.string.isRequired\r\n}\r\n\r\nDemo01.defaultProps = {\r\n    name: 'tom'\r\n}\r\n\r\nexport default Demo01\r\n// rcc\r\n// rafc\r\n// rafce","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Todolist from './pages/Todolist'\n// import Home from './pages/Home';\n// import Control from './components/Control';\nimport Demo01 from './pages/Demo01';\n// import App from './pages/App';\n\nReactDOM.render( \n  <Todolist/>,\n    document.getElementById('root')\n);\n\n\n\n\n// alt shift + 上下键   复制一行\n// alt + 上下键         移动一行\n// 按住alt ，鼠标点击\n// Ctrl + shift + 左右键，选中整个单词\n// ctrl+shift+L \n\n// 组件声明\n// 函数组件\n// UI（展示）组件，木偶组件\n// function App(props){\n//   const { title, id } = props;\n//   return <div>\n//     <h1>App组件内容</h1>\n//     <div>{title}</div>\n//     <div>{id}</div>\n//   </div>\n// }\n// // 智能组件\n// class Demo extends React.Component{\n//   constructor(){\n//      super();\n//     //  声明状态\n//      this.state = {\n//        name: new Date().toLocaleString()\n//      }\n//      setInterval(()=>{\n//       this.setState({name:new Date().toLocaleString()})\n//      },1000)\n//   }\n//   render(){\n//     return <div>\n//       <div>name:{this.state.name}</div>\n//       <App title={this.state.name} id='app'/>\n//     </div>\n//   }\n// }\n\n\n\n\n\n// let ele = React.createElement(\n//   'h1',\n//   {id:'title'},\n//   React.createElement('div',{},'hello'),\n//   'react'\n// )\n\n// 将jsx对象渲染到DOM中\n// let ReactDOM = {\n//   render(eleObj,container){\n//     // 解构\n//     const { type,props } = eleObj;\n//     // 创建第一层节点\n//     let ele = document.createElement(type);\n//     // 遍历属性对象，将属性添加到第一层节点对象上\n//     for (const prop in props) {\n//       console.log(prop)\n//       if(prop == 'children'){\n//         if(typeof props.children == 'string'){\n//             const txtNode = document.createTextNode(props.children);\n//             ele.appendChild(txtNode);\n//             break;\n//         }\n//         // 将第一层节点对象的子元素添加进去\n//         props.children.forEach( child => {\n//           if(typeof child == 'string'){\n//             const txtNode = document.createTextNode(child);\n//             ele.appendChild(txtNode);\n//           }else{\n//             ReactDOM.render(child,ele);\n//           }\n//         })\n//       }else{\n//         ele[prop] = props[prop];\n//       }\n//     }\n\n//     // 将第一层DOM节点添加到container中\n//     container.appendChild(ele);\n//   }\n// }\n\n\n\n\n\n// 1、原生JS，DOM操作（jQ）\n// 2、React：开发效率高、性能高\n// 3、环境搭建、创建一个项目、运行\n// 4、JSX语法"],"sourceRoot":""}